    Compute Empwage using Collection

1..                                                                                                                                                                                                                                                                                                                        empwagecollection.java
import java.util.*;
public class EmpWageBuilderCollection implements IComputeEmpWage
{

             public static final int IS_PART_TIME=1;
        public static final int IS_FULL_TIME=2;


        private int numOfCompany=0;
        private LinkedList<CompanyEmpWage> companyEmpWageList;
        private Map<String,CompanyEmpWage> companyToEmpWageMap;


                         public EmpWageBuilderCollection()
                     {

                        companyEmpWageList = new LinkedList<CompanyEmpWage>();
                        companyToEmpWageMap = new HashMap<String, CompanyEmpWage>();

                                }

                        public void addCompanyEmpWage(String company, int empWagePerHr, int numOfWorkingDays, int maxHoursPerMonth)
                        {
                                CompanyEmpWage companyEmpWage=new CompanyEmpWage(company,empWagePerHr,numOfWorkingDays,maxHoursPerMonth);
                                companyEmpWageList.add(companyEmpWage);
                                companyToEmpWageMap.put(company,companyEmpWage);
                        }

                        public void computeEmpWage()
                        {
                                 for(int i=0;i< companyEmpWageList.size();i++)
                            {
                            CompanyEmpWage companyEmpWage=companyEmpWageList.get(i);
                            companyEmpWage.setTotalEmpWage(this.computeEmpWage(companyEmpWage));
                                System.out.println(companyEmpWage);
                            }
                        }


                @Override
                public int getTotalWage(String company){
                        return companyToEmpWageMap.get(company).totalEmpWage;
                }
public int computeEmpWage(CompanyEmpWage companyEmpWage)
                {

                int empHrs=0,totalEmpHrs=0,totalWorkingDays=0;

                while(totalEmpHrs <=companyEmpWage.maxHoursPerMonth && totalWorkingDays <= companyEmpWage.numOfWorkingDays)
                        {
                        totalWorkingDays++;
                        int empCheck=(int)Math.floor(Math.random()*10)%3;
                         switch (empCheck)
                                {
                              case IS_PART_TIME:
                                     empHrs=4;
                                    break;
                              case IS_FULL_TIME:
                                     empHrs=8;
                                     break;
                              default:
                                     empHrs=0;
                                }

                          totalEmpHrs+=empHrs;
                          System.out.println("Days: "+totalWorkingDays+" Emp Hr: "+empHrs);
                        }
                           return (totalEmpHrs * 20);
                   }
               public static void main(String[] args)
{
                IComputeEmpWage empWageBuilderCollection=new EmpWageBuilderCollection();
                empWageBuilderCollection.addCompanyEmpWage("company-ABC",20,10,10);
                empWageBuilderCollection.addCompanyEmpWage("company-DEF",10,8,20);
                empWageBuilderCollection.computeEmpWage();
                System.out.println("Total wage for company-ABC company: "+empWageBuilderCollection.getTotalWage("company-ABC"));
                System.out.println("Total wage for company-DEF company: "+empWageBuilderCollection.getTotalWage("company-DEF"));


                }

     }
public interface IComputeEmpWage{
                public void addCompanyEmpWage(String company,int empWagePerHr, int numOfWorkingDays, int maxhoursPerMonth);
                public void computeEmpWage();
                public int getTotalWage(String company);
   }

  public class CompanyEmpWage{
        public final String company;
        public final int empWagePerHr;
public final int numOfWorkingDays;
        public final int maxHoursPerMonth;
        public int totalEmpWage;
        public CompanyEmpWage(String company, int empWagePerHr, int numOfWorkingDays, int maxHoursPerMonth){
         this.company=company;
         this.empWagePerHr=empWagePerHr;
         this.numOfWorkingDays=numOfWorkingDays;
         this.maxHoursPerMonth=maxHoursPerMonth;
         totalEmpWage=0;
        }

        public void setTotalEmpWage(int totalEmpWage){
          this.totalEmpWage=totalEmpWage;
        }

        @Override
        public String toString(){
         return "Total Emp Wage for Company: "+company+" is : "+totalEmpWage;
        }
}

OUTPUT:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
$ java empwagecollection.java
Days: 1 Emp Hr: 0
Days: 2 Emp Hr: 8
Days: 3 Emp Hr: 8
Total Emp Wage for Company: company-ABC is : 320
Days: 1 Emp Hr: 0
Days: 2 Emp Hr: 8
Days: 3 Emp Hr: 4
Days: 4 Emp Hr: 0
Days: 5 Emp Hr: 8
Days: 6 Emp Hr: 0
Days: 7 Emp Hr: 4
Total Emp Wage for Company: company-DEF is : 480
Total wage for company-ABC company: 320
Total wage for company-DEF company: 480
=====================================================================================================